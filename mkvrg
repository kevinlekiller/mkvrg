#!/bin/bash

cat > /dev/null <<LICENSE
    Copyright (C) 2016,2023  kevinlekiller
    Copyright (C) 2016  WhitePeter
    
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
    
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
    https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html
LICENSE

cat > /dev/null <<DESCRIPTION
    Bash script for analyzing audio tracks in matroska files with BS1770GAIN and
    applying replaygain (EBU r128) track and sample peak information
    with mkvpropedit, this avoids remuxing the matroksa file.
    Pass list of files or a directory to scan files, if you pass a
    directory it will recursively search in it for files.
    It will only work on files with these extensions: "mkv, mka, mk3d".
    
    Requires: bs1770gain ffprobe mkvpropedit
    
    Requires at minimum bs1770gain 0.4.11 (otherwise if the matroska file
    has multiple audio tracks, it will scan the wrong track for
    replaygain information, 0.4.11 fixes this issue).

    Note (2023): Works on 0.4.12 also, might work on newer versions, but untested.
    
    Change settings below.
    
    examples:
    ./mkvrg                  ; Recursive search in current folder for matroska files.
    ./mkvrg test.mkv         ; Process test.mkv in current folder.
    ./mkvrg Videos/          ; Recursive search in Videos folder for matroska files.
    ./mkvrg test.mkv Videos/ ; Process test.mkv in current folder and recursive
                                  search in Videos folder for matroska files.
DESCRIPTION

#########################################################################################
##################################### Settings ##########################################
#########################################################################################

# Check if the file already has tags or if tags were written succesfully.
VERIFY=${VERIFY:-true}

# Force mkvrg to process matroska files, even if they already have replaygain tags. (ignored if VERIFY is false)
FORCE=${FORCE:-false}

# Minimum matroska file size to work on. change to +0 to ignore.
# For example, set to +50M to ignore files under 50MB.
MINSIZE=${MINSIZE:-"+0"}

# Type of peak calculation to use.
# sample : Faster but less accurate.
# true : Slower but accurate.
PEAKTYPE=${PEAKTYPE:-"sample"}

#########################################################################################
#########################################################################################
#########################################################################################

if [[ ! $PEAKTYPE =~ ^(sample|peak)$ ]]; then
    echo -e "\e[31mERROR: PEAKTYPE must be either sample or peak.\e[0m"
    exit 1
fi

REQPROGS="bs1770gain ffprobe file find grep mkvpropedit tr"
for PROG in $REQPROGS; do
    if ! which "$PROG" &> /dev/null; then
        echo -e "\e[31mERROR: This program is required: $PROG\e[0m"
        exit 1
    fi
done

REFLOUDNESS=$(bs1770gain --help 2>&1 | grep -Poi "[-\d.]+\s*LUFS,?\s*default" | cut -d\  -f1)
if [[ $REFLOUDNESS == "" ]]; then
    echo -e "\e[31mERROR: Could not find default replaygain reference loudness from bs1770gain.\e[0m"
    exit 1
fi

TMPFILE="$(mktemp)"
if [[ ! -f $TMPFILE ]] || [[ ! -w $TMPFILE ]]; then
    echo -e "\e[31mERROR: Could not create temp file $TMPFILE. Check permissions.\e[0m"
    exit 1
fi

trap cleantmp SIGHUP SIGINT SIGQUIT SIGTERM

function cleantmp() {
    rm -f "$TMPFILE"
    if [[ -n $1 ]]; then
        exit "$1"
    fi
    exit 1
}

i=0
while read -r file; do
    file="$(realpath "$file")"
    if [[ ! $(file "$file") =~ "Matroska" ]]; then
        echo -e "\e[92mNOTICE: '$file' is not a mkv file.\e[0m"
        continue
    fi
    
    FFPROBEOUT=$(ffprobe -hide_banner -i "$file" 2>&1)
    if [[ ! $FORCE == true ]] && [[ $VERIFY == true ]] && [[ "$FFPROBEOUT" =~ ITU-R\ BS\.1770 ]]; then
        echo -e "\e[92mNOTICE: Skipping, replaygain tags already exist on file '$file'\e[0m"
        continue
    fi
    
    tracks=$(echo "$FFPROBEOUT" | grep -Poi "Stream\s*#\d+:\d+.+?Audio" | grep -Po "\d+:\d+" | cut -d : -f 2)
    if [[ $tracks == "" ]]; then
        echo -e "\e[93mWARNING: Could not get track list for '$file'.\e[0m"
        continue
    fi
    
    fileprocessed=0
    for track in $tracks; do
        echo "INFO: Running bs1770gain, this can take a while. (track $track on file '$file')"
        if [[ $PEAKTYPE == sample ]]; then
            echo "INFO: Using sample peak calculation."
            OUTPUT=$(bs1770gain --loglevel quiet --audio "$track" -rp "$file" 2> /dev/null | tee /dev/stderr)
        else
            echo "INFO: Using true peak calculation."
            OUTPUT=$(bs1770gain --loglevel quiet --audio "$track" -rt "$file" 2> /dev/null | tee /dev/stderr)
        fi
        RGINFO=$(echo "$OUTPUT" | tr "\r\n" " " | grep -io "analyzing.*ALBUM")
        TRACKGAIN=$(echo "$RGINFO" | grep -Poi "[-\d.]+\s+LU\s+range" | cut -d\  -f1)
        TRACKRANGE=$(echo "$RGINFO" | grep -Poi "range:\s+[-\d.]+\s+LUFS\s+(true|sample)" | grep -Po "\-?[\d.]+")
        TRACKPEAK=$(echo "$RGINFO" | grep -Poi "[-\d.]+\s+\[ALBUM" | cut -d\  -f1)
        if [[ $TRACKGAIN == "" ]] || [[ $TRACKPEAK == "" ]]; then
            echo -e "\e[92mNOTICE: Problem finding replaygain info from bs1770gain for track $track on file '$file'.\e[0m"
            continue
        fi
        
        echo "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>

<!DOCTYPE Tags SYSTEM \"matroskatags.dtd\">
<Tags>
  <Tag>
    <Targets>
    </Targets>
    <Simple>
      <Name>REPLAYGAIN_ALGORITHM</Name>
      <String>ITU-R BS.1770</String>
    </Simple>
    <Simple>
      <Name>REPLAYGAIN_REFERENCE_LOUDNESS</Name>
      <String>$REFLOUDNESS</String>
    </Simple>
    <Simple>
      <Name>REPLAYGAIN_TRACK_GAIN</Name>
      <String>$TRACKGAIN</String>
    </Simple>
    <Simple>
      <Name>REPLAYGAIN_TRACK_RANGE</Name>
      <String>$TRACKRANGE</String>
    </Simple>
    <Simple>
      <Name>REPLAYGAIN_TRACK_PEAK</Name>
      <String>$TRACKPEAK</String>
    </Simple>
  </Tag>
</Tags>" > "$TMPFILE"
        
        echo "INFO: Applying gain ($TRACKGAIN) / true peak ($TRACKPEAK) / range ($TRACKRANGE) for track $track on file '$file'."

        mkvpropedit --tags track:"$((++track))":"$TMPFILE" "$file"
        
        if [[ $VERIFY == true ]] && [[ ! $(ffprobe -hide_banner -i "$file" 2>&1) =~ ITU-R\ BS\.1770 ]]; then
            echo -e "\e[93mWARNING: Replaygain has not been applied for track $track on file '$file'.\e[0m"
            continue
        fi
        ((fileprocessed++))
    done
    if [[ $fileprocessed -gt 0 ]]; then
        ((i++))
    fi
done < <(find "$@" -type f -size "$MINSIZE" \( -iname "*.mk[av]" -o -iname "*.mk3d" \))

# If you process a single file, you can use the exit status to know if the file was processed or not,
# which is useful if you're using this script inside another script.
if [[ $i == 0 ]]; then
    cleantmp 1
fi
cleantmp 0
